metadata:
  annotations:
    prow.k8s.io/context: job-context
    prow.k8s.io/job: job-name
  creationTimestamp: null
  labels:
    created-by-prow: "true"
    needstobe: inherited
    prow.k8s.io/build-id: blabla
    prow.k8s.io/context: job-context
    prow.k8s.io/id: pod
    prow.k8s.io/job: job-name
    prow.k8s.io/type: periodic
  name: pod
spec:
  automountServiceAccountToken: false
  containers:
  - command:
    - /tools/entrypoint
    env:
    - name: MY_ENV
      value: rocks
    - name: ARTIFACTS
      value: /logs/artifacts
    - name: BUILD_ID
      value: blabla
    - name: BUILD_NUMBER
      value: blabla
    - name: CI
      value: "true"
    - name: GOPATH
      value: /home/prow/go
    - name: JOB_NAME
      value: job-name
    - name: JOB_SPEC
      value: '{"type":"periodic","job":"job-name","buildid":"blabla","prowjobid":"pod","decoration_config":{"timeout":"2h0m0s","grace_period":"10s","utility_images":{"clonerefs":"clonerefs:tag","initupload":"initupload:tag","entrypoint":"entrypoint:tag","sidecar":"sidecar:tag"},"gcs_configuration":{"bucket":"my-bucket","path_strategy":"legacy","default_org":"kubernetes","default_repo":"kubernetes"},"gcs_credentials_secret":"secret-name","ssh_key_secrets":["ssh-1","ssh-2"]}}'
    - name: JOB_TYPE
      value: periodic
    - name: PROW_JOB_ID
      value: pod
    - name: ENTRYPOINT_OPTIONS
      value: '{"timeout":7200000000000,"grace_period":10000000000,"artifact_dir":"/logs/artifacts","args":["/bin/thing","some","args"],"container_name":"test","process_log":"/logs/process-log.txt","marker_file":"/logs/marker-file.txt","metadata_file":"/logs/artifacts/metadata.json"}'
    image: tester
    name: test
    resources: {}
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /logs
      name: logs
    - mountPath: /tools
      name: tools
  - env:
    - name: JOB_SPEC
      value: '{"type":"periodic","job":"job-name","buildid":"blabla","prowjobid":"pod","decoration_config":{"timeout":"2h0m0s","grace_period":"10s","utility_images":{"clonerefs":"clonerefs:tag","initupload":"initupload:tag","entrypoint":"entrypoint:tag","sidecar":"sidecar:tag"},"gcs_configuration":{"bucket":"my-bucket","path_strategy":"legacy","default_org":"kubernetes","default_repo":"kubernetes"},"gcs_credentials_secret":"secret-name","ssh_key_secrets":["ssh-1","ssh-2"]}}'
    - name: SIDECAR_OPTIONS
      value: '{"gcs_options":{"items":["/logs/artifacts"],"bucket":"my-bucket","path_strategy":"legacy","default_org":"kubernetes","default_repo":"kubernetes","gcs_credentials_file":"/secrets/gcs/service-account.json","dry_run":false},"entries":[{"args":["/bin/thing","some","args"],"container_name":"test","process_log":"/logs/process-log.txt","marker_file":"/logs/marker-file.txt","metadata_file":"/logs/artifacts/metadata.json"}],"censoring_options":{}}'
    image: sidecar:tag
    name: sidecar
    resources: {}
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /logs
      name: logs
    - mountPath: /secrets/gcs
      name: gcs-credentials
  initContainers:
  - env:
    - name: INITUPLOAD_OPTIONS
      value: '{"bucket":"my-bucket","path_strategy":"legacy","default_org":"kubernetes","default_repo":"kubernetes","gcs_credentials_file":"/secrets/gcs/service-account.json","dry_run":false}'
    - name: JOB_SPEC
      value: '{"type":"periodic","job":"job-name","buildid":"blabla","prowjobid":"pod","decoration_config":{"timeout":"2h0m0s","grace_period":"10s","utility_images":{"clonerefs":"clonerefs:tag","initupload":"initupload:tag","entrypoint":"entrypoint:tag","sidecar":"sidecar:tag"},"gcs_configuration":{"bucket":"my-bucket","path_strategy":"legacy","default_org":"kubernetes","default_repo":"kubernetes"},"gcs_credentials_secret":"secret-name","ssh_key_secrets":["ssh-1","ssh-2"]}}'
    image: initupload:tag
    name: initupload
    resources: {}
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /secrets/gcs
      name: gcs-credentials
  - args:
    - --copy-mode-only
    image: entrypoint:tag
    name: place-entrypoint
    resources: {}
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /tools
      name: tools
  restartPolicy: Never
  securityContext: {}
  terminationGracePeriodSeconds: 12
  volumes:
  - emptyDir: {}
    name: logs
  - emptyDir: {}
    name: tools
  - name: gcs-credentials
    secret:
      secretName: secret-name
status: {}
