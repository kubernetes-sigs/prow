apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: fakepubsub
  labels:
    app: fakepubsub
spec:
  selector:
    matchLabels:
      app: fakepubsub
  replicas: 1
  template:
    metadata:
      labels:
        app: fakepubsub
    spec:
      containers:
      - name: fakepubsub
        image: localhost:5001/fakepubsub
        args:
        - --config-path=/etc/config/config.yaml
        ports:
        - containerPort: 8085
        volumeMounts:
        - name: config
          mountPath: /etc/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: fakepubsub
  namespace: default
  name: fakepubsub
spec:
  ports:
  - name: main
    # Allow the test code to bypass ingress-nginx, because we don't want to deal
    # with TLS or mess with the ingress-nginx configuration. By using this
    # nodePort (also configured in KIND's settings), the test code can just use
    # localhost:<FAKEPUBSUB_RANDOM_NODE_PORT> to talk to the Pub/Sub emulator
    # running in port 8085 in the fakepubsub container. You must replace this
    # FAKEPUBSUB_RANDOM_NODE_PORT string with a value 30000-32767.
    nodePort: FAKEPUBSUB_RANDOM_NODE_PORT
    # This is the port for the *service* from within the cluster. It's used by
    # sub (that is, sub talks to the fakepubsub service via port 80 --- i.e.,
    # "fakepubusb.default:80").
    port: 80
    # 8085 is the default port used by the Pub/Sub emulator that ships with
    # gcloud. It is the port exposed by the pod.
    targetPort: 8085
    protocol: TCP
  selector:
    app: fakepubsub
  type: NodePort
