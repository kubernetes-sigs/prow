# Copyright 2021 The Kubernetes Authors All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: deck-tenanted
  labels:
    app: deck-tenanted
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: deck-tenanted
  template:
    metadata:
      labels:
        app: deck-tenanted
    spec:
      serviceAccountName: deck-tenanted
      terminationGracePeriodSeconds: 30
      containers:
      - name: deck-tenanted
        image: localhost:5001/deck
        imagePullPolicy: Always
        ports:
          - name: http
            containerPort: 8080
        args:
        - --tide-url=http://tide/
        - --hook-url=http://hook:8888/plugin-help
        - --oauth-url=/github-login
        - --config-path=/etc/config/config.yaml
        - --job-config-path=/etc/job-config
        - --spyglass=true
        - --tenant-id=tester
        - --rerun-creates-job
        - --github-token-path=/etc/github/oauth
        - --github-endpoint=http://fakeghserver
        - --github-oauth-config-file=/etc/githuboauth/secret
        - --cookie-secret=/etc/cookie/secret
        - --plugin-config=/etc/plugins/plugins.yaml
        env:
        # Use KUBECONFIG envvar rather than --kubeconfig flag in order to provide multiple configs to merge.
        - name: KUBECONFIG
          value: "/etc/kubeconfig/config"
        volumeMounts:
        - name: oauth-config
          mountPath: /etc/githuboauth
          readOnly: true
        - name: cookie-secret
          mountPath: /etc/cookie
          readOnly: true
        - mountPath: /etc/kubeconfig
          name: kubeconfig
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: job-config
          mountPath: /etc/job-config
          readOnly: true
        - name: oauth-token
          mountPath: /etc/github
          readOnly: true
        - name: plugins
          mountPath: /etc/plugins
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 3
          timeoutSeconds: 600
      volumes:
      - name: oauth-config
        secret:
          secretName: github-oauth-config
      - name: oauth-token
        secret:
          secretName: oauth-token
      - name: cookie-secret
        secret:
          secretName: cookie
      - name: kubeconfig
        secret:
          defaultMode: 420
          secretName: kubeconfig
      - name: config
        configMap:
          name: config
      - name: job-config
        configMap:
          name: job-config
      - name: plugins
        configMap:
          name: plugins
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: deck-tenanted
  namespace: default
  name: deck-tenanted
spec:
  selector:
    app: deck-tenanted
  ports:
  - name: main
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 9090
    protocol: TCP
  type: NodePort
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: deck-tenanted
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: deck-tenanted
rules:
- apiGroups:
  - "prow.k8s.io"
  resources:
  - prowjobs
  verbs:
  - get
  - list
  - watch
  # Required when deck runs with `--rerun-creates-job=true`
  - create
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: test-pods
  name: deck-tenanted
rules:
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: deck-tenanted
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: deck-tenanted
subjects:
- kind: ServiceAccount
  name: deck-tenanted
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: test-pods
  name: deck-tenanted
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: deck-tenanted
subjects:
- kind: ServiceAccount
  name: deck-tenanted
  namespace: default
